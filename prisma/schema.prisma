generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Animal {
  Id                        Int               @id @unique(map: "sqlite_autoindex_Animal_1") @default(autoincrement())
  Name                      String?
  Category                  String?
  Breed                     String?
  DateBorn                  DateTime?
  Gender                    String?
  Registered                String?
  Color                     String?
  ListPrice                 Decimal?          @default(0.0000)
  Photo                     Bytes?
  ImageFile                 String?
  ImageHeight               Int?
  ImageWidth                Int?
  Category_AnimalToCategory Category?         @relation(fields: [Category], references: [Category], onDelete: Cascade, onUpdate: NoAction)
  Breed_AnimalToBreed       Breed?            @relation(fields: [Category, Breed], references: [Category, Breed], onDelete: Cascade, onUpdate: NoAction)
  AnimalOrderItem           AnimalOrderItem[]
  SaleAnimal                SaleAnimal[]

  @@index([Category, Breed], map: "idx_FK_Animal_Breed")
}

model AnimalOrder {
  Id              Int               @id @unique(map: "sqlite_autoindex_AnimalOrder_1") @default(autoincrement())
  ShippingCost    Decimal?          @default(0.0000)
  DateOrdered     DateTime?
  DateReceived    DateTime?
  SupplierId      Int?              @default(0)
  EmployeeId      Int?              @default(0)
  Employee        Employee?         @relation(fields: [EmployeeId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  Supplier        Supplier?         @relation(fields: [SupplierId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  AnimalOrderItem AnimalOrderItem[]

  @@index([SupplierId], map: "idx_FK_AnimalOrder_Supplier")
  @@index([EmployeeId], map: "idx_FK_AnimalOrder_Employee")
}

model AnimalOrderItem {
  OrderId     Int         @default(0)
  AnimalId    Int         @default(0)
  Cost        Decimal?    @default(0.0000)
  Animal      Animal      @relation(fields: [AnimalId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  AnimalOrder AnimalOrder @relation(fields: [OrderId], references: [Id], onDelete: Cascade, onUpdate: NoAction)

  @@id([OrderId, AnimalId])
  @@index([AnimalId], map: "idx_FK_AnimalOrderItem_Animal")
}

model AutoNumber {
  TableName    String @id
  KeyValue     Float?
  KeyIncrement Float? @default(1)
}

model Breed {
  Category                 String
  Breed                    String
  Category_BreedToCategory Category @relation(fields: [Category], references: [Category], onDelete: Cascade, onUpdate: NoAction)
  Animal                   Animal[]

  @@id([Category, Breed])
}

model Category {
  Category     String        @id
  Registration String?
  Animal       Animal[]
  Breed        Breed[]
  Merchandise  Merchandise[]
}

model City {
  Id             Int        @id @unique(map: "sqlite_autoindex_City_1") @default(autoincrement())
  Name           String?
  State          String?
  Country        String?    @default("\"USA\"")
  ZipCode        String?
  AreaCode       String?
  Latitude       Float?     @default(0)
  Longitude      Float?     @default(0)
  Population1980 Int?       @default(0)
  Population1990 Int?       @default(0)
  Customer       Customer[]
  Employee       Employee[]
  Supplier       Supplier[]
}

model Customer {
  Id        Int     @id @unique(map: "sqlite_autoindex_Customer_1") @default(autoincrement())
  FirstName String?
  LastName  String?
  Phone     String?
  Address   String?
  ZipCode   String?
  CityId    Int?    @default(0)
  City      City?   @relation(fields: [CityId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  Sale      Sale[]

  @@index([CityId], map: "idx_FK_Customer_City")
}

model CustomerAccount {
  Id         Int      @id @unique(map: "sqlite_autoindex_CustomerAccount_1") @default(autoincrement())
  CustomerId Int?     @default(0)
  Balance    Decimal? @default(0.0000)
}

model Employee {
  Id               Int                @id @unique(map: "sqlite_autoindex_Employee_1") @default(autoincrement())
  FirstName        String?
  LastName         String?
  Title            String?
  EmployeeLevel    Int?               @default(0)
  ManagerId        Int?               @default(0)
  DateHired        DateTime?
  DateReleased     DateTime?
  Phone            String?
  Address          String?
  ZipCode          String?
  CityId           Int?               @default(0)
  TaxPayerId       String?
  City             City?              @relation(fields: [CityId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  AnimalOrder      AnimalOrder[]
  MerchandiseOrder MerchandiseOrder[]
  Sale             Sale[]

  @@index([CityId], map: "idx_FK_Employee_City")
}

model Merchandise {
  Id                             Int         @id @unique(map: "sqlite_autoindex_Merchandise_1") @default(autoincrement())
  Category                       String?
  ListPrice                      Decimal?    @default(0.0000)
  QuantityOnHand                 Int?        @default(0)
  Description                    String?
  Category_CategoryToMerchandise Category?   @relation(fields: [Category], references: [Category], onDelete: Cascade, onUpdate: NoAction)
  OrderItem                      OrderItem[]
  SaleItem                       SaleItem[]

  @@index([Category], map: "idx_FK_Merchandise_Category")
}

model MerchandiseOrder {
  PONumber     Int         @id @unique(map: "sqlite_autoindex_MerchandiseOrder_1") @default(autoincrement())
  DateOrdered  DateTime?
  DateReceived DateTime?
  SupplierId   Int?        @default(0)
  EmployeeId   Int?        @default(0)
  ShippingCost Decimal?    @default(0.0000)
  Supplier     Supplier?   @relation(fields: [SupplierId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  Employee     Employee?   @relation(fields: [EmployeeId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  OrderItem    OrderItem[]

  @@index([SupplierId], map: "idx_FK_Order_Supplier")
  @@index([EmployeeId], map: "idx_FK_Order_Employee")
}

model OrderItem {
  PONumber         Int
  ItemId           Int
  Quantity         Float?           @default(0)
  Cost             Decimal?         @default(0.0000)
  Merchandise      Merchandise      @relation(fields: [ItemId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  MerchandiseOrder MerchandiseOrder @relation(fields: [PONumber], references: [PONumber], onDelete: Cascade, onUpdate: NoAction)

  @@id([PONumber, ItemId])
  @@index([ItemId], map: "idx_FK_OrderItem_Merchandise")
}

model Preferences {
  Id          String  @id
  Value       String?
  Description String?
}

model Revision {
  Id           Int       @id @unique(map: "sqlite_autoindex_Revision_1") @default(autoincrement())
  Version      String?
  Description  String?
  Author       String?
  DateReleased DateTime?
}

model Sale {
  Id         Int          @id @unique(map: "sqlite_autoindex_Sale_1") @default(autoincrement())
  DateSold   DateTime?
  EmployeeId Int?         @default(0)
  CustomerId Int?         @default(0)
  SalesTax   Decimal?     @default(0.0000)
  Customer   Customer?    @relation(fields: [CustomerId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  Employee   Employee?    @relation(fields: [EmployeeId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  SaleAnimal SaleAnimal[]
  SaleItem   SaleItem[]

  @@index([EmployeeId], map: "idx_FK_Sale_Employee")
  @@index([CustomerId], map: "idx_FK_Sale_Customer")
}

model SaleAnimal {
  SaleId    Int      @default(0)
  AnimalId  Int      @default(0)
  SalePrice Decimal? @default(0.0000)
  Sale      Sale     @relation(fields: [SaleId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  Animal    Animal   @relation(fields: [AnimalId], references: [Id], onDelete: Cascade, onUpdate: NoAction)

  @@id([SaleId, AnimalId])
  @@index([AnimalId], map: "idx_FK_SaleAnimal_Animal")
}

model SaleItem {
  SaleId      Int
  ItemId      Int
  Quantity    Int?        @default(0)
  SalePrice   Decimal?    @default(0.0000)
  Sale        Sale        @relation(fields: [SaleId], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  Merchandise Merchandise @relation(fields: [ItemId], references: [Id], onDelete: Cascade, onUpdate: NoAction)

  @@id([SaleId, ItemId])
  @@index([ItemId], map: "idx_FK_SaleItem_Merchandise")
}

model Supplier {
  Id               Int                @id @unique(map: "sqlite_autoindex_Supplier_1") @default(autoincrement())
  Name             String?
  ContactName      String?
  Phone            String?
  Address          String?
  ZipCode          String?
  CityId           Int?               @default(0)
  City             City?              @relation(fields: [CityId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  AnimalOrder      AnimalOrder[]
  MerchandiseOrder MerchandiseOrder[]

  @@index([CityId], map: "idx_FK_Supplier_City")
}
